{"version":3,"file":"index.mjs","sources":["../4ae1a2459e3d195809ff47811a2c62","../afinn-96/lib/main.js","../afinn-96/lib/index.js","../afinn-111/lib/main.js","../c3c470fcf4f4ddc8e698fcf37ff8fd","../afinn-111/lib/index.js","../anscombes-quartet/lib/main.js","../88a6108ea2867dc777f5efd7bdc90f","../anscombes-quartet/lib/index.js","../berndt-cps-wages-1985/lib/main.js","../8a5ee527cde431cfd429ccb7db5a56","../berndt-cps-wages-1985/lib/index.js","../cdc-nchs-us-births-1969-1988/lib/main.js","../b5da33239e79e309b94217c70bb736","../cdc-nchs-us-births-1969-1988/lib/index.js","../cdc-nchs-us-births-1994-2003/lib/main.js","../8a8edf4f9de1d5ce4c9a07db6746c7","../cdc-nchs-us-births-1994-2003/lib/index.js","../cdc-nchs-us-infant-mortality-bw-1915-2013/lib/main.js","../92329974effad7b0f018f6766e0890","../cdc-nchs-us-infant-mortality-bw-1915-2013/lib/index.js","../c9a6b94453c75f8076d526946a839a","../cmudict/lib/main.js","../cmudict/lib/index.js","../dale-chall-new/lib/main.js","../378209ed6bba8441c407a4c9279b15","../dale-chall-new/lib/index.js","../emoji/lib/main.js","../e9dc857e871e3894597f4e296d1c93","../emoji/lib/index.js","../emoji-code-picto/lib/main.js","../a340f682367357d6944fbd7c5c067d","../emoji-code-picto/lib/index.js","../emoji-picto-code/lib/main.js","../c9880041cc3224f8455ce0614d7eae","../emoji-picto-code/lib/index.js","../female-first-names-en/lib/main.js","../a2cd49293784860a4f8cff8e52a5b3","../female-first-names-en/lib/index.js","../fivethirtyeight-ffq/lib/main.js","../887af232d2dd9a05921182295bd4dc","../fivethirtyeight-ffq/lib/index.js","../frb-sf-wage-rigidity/lib/main.js","../2e06f674ac111a8cdb6d53a2bfd84f","../frb-sf-wage-rigidity/lib/index.js","../harrison-boston-house-prices/lib/main.js","../285cbb05fe259c64f198be1b067b50","../harrison-boston-house-prices/lib/index.js","../harrison-boston-house-prices-corrected/lib/main.js","../2db174044fea95ccdaf113ec594b35","../harrison-boston-house-prices-corrected/lib/index.js","../herndon-venus-semidiameters/lib/main.js","../b7bcd5823e0baf760e4cb7c521f6e8","../herndon-venus-semidiameters/lib/index.js","../img-acanthus-mollis/lib/main.js","../cb486520f348c263e11ea296c24cd4","../img-acanthus-mollis/lib/index.js","../img-airplane-from-above/lib/main.js","../7f015b54f5d94fc45688908d3ec53a","../img-airplane-from-above/lib/index.js","../img-allium-oreophilum/lib/main.js","../d13732ab1317a46712b3c0ed106fb9","../img-allium-oreophilum/lib/index.js","../img-black-canyon/lib/main.js","../315d96b98a86b94b3100aee8dc0e88","../img-black-canyon/lib/index.js","../img-dust-bowl-home/lib/main.js","../fa0987120ac7a0f7b504b73bae8dd8","../img-dust-bowl-home/lib/index.js","../img-french-alpine-landscape/lib/main.js","../799e20ff30675d6312f70914d9916b","../img-french-alpine-landscape/lib/index.js","../img-locomotion-house-cat/lib/main.js","../a41046905f16308742e870d1bae1bc","../img-locomotion-house-cat/lib/index.js","../img-locomotion-nude-male/lib/main.js","../3df1665cbf1717baff5f062bec30fb","../img-locomotion-nude-male/lib/index.js","../img-march-pastoral/lib/main.js","../6163e9cf21b4fdb86b386232d5e1e4","../img-march-pastoral/lib/index.js","../img-nagasaki-boats/lib/main.js","../4bcd91942c984e5d7149337b35c1d6","../img-nagasaki-boats/lib/index.js","../liu-negative-opinion-words-en/lib/main.js","../898f772075b5b33d07896351c7eec4","../liu-negative-opinion-words-en/lib/index.js","../liu-positive-opinion-words-en/lib/main.js","../40356392a1fa2ca7a97451b33f24a9","../liu-positive-opinion-words-en/lib/index.js","../male-first-names-en/lib/main.js","../1d0d1b603221bc7eb87bd8b7b0148b","../male-first-names-en/lib/index.js","../371d3f8e3460003e41817a90613b0c","../minard-napoleons-march/lib/main.js","../minard-napoleons-march/lib/index.js","../moby-dick/lib/main.js","../b63418852729899bb017c645eae817","../moby-dick/lib/index.js","../month-names-en/lib/main.js","../f368b3b9b5939fe106bc127155d982","../month-names-en/lib/index.js","../nightingales-rose/lib/main.js","../63f730c78608dd024c9f82b0677a93","../nightingales-rose/lib/index.js","../pace-boston-house-prices/lib/main.js","../c12000a91cfca9f587ba65a4d6c427","../pace-boston-house-prices/lib/index.js","../primes-100k/lib/main.js","../1f4c779dc1ec60b002e3dc470845f7","../primes-100k/lib/index.js","../savoy-stopwords-fin/lib/main.js","../e96d4ca678686c84c948dec1206145","../savoy-stopwords-fin/lib/index.js","../savoy-stopwords-fr/lib/main.js","../3192cf50be7c6f269b3ff5d74b7cac","../savoy-stopwords-fr/lib/index.js","../savoy-stopwords-ger/lib/main.js","../82f9cc4df6e1104674cdec1afcbf58","../savoy-stopwords-ger/lib/index.js","../savoy-stopwords-it/lib/main.js","../38450c32c41034a74c23ab4f676df9","../savoy-stopwords-it/lib/index.js","../savoy-stopwords-por/lib/main.js","../3ebb21295dfcf543f0f177e1a73f75","../savoy-stopwords-por/lib/index.js","../savoy-stopwords-sp/lib/main.js","../2abd3ebfc2376ecc74c064705b1b4a","../savoy-stopwords-sp/lib/index.js","../savoy-stopwords-swe/lib/main.js","../f7dcc88db9ea2a5fbcffd03e1041b9","../savoy-stopwords-swe/lib/index.js","../sotu/lib/validate.js","../sotu/lib/data_dir.js","../5767675f4c864eb178a3a76053d9b3","../sotu/lib/file_list.js","../sotu/lib/re_filename.js","../sotu/lib/index_year.js","../sotu/lib/unsnakecase.js","../sotu/lib/index_name.js","../sotu/lib/index_party.js","../sotu/lib/db.js","../sotu/lib/union.js","../sotu/lib/load_json.js","../sotu/lib/get_file.js","../sotu/lib/sotu.js","../sotu/lib/index.js","../spache-revised/lib/main.js","../fc6b0a34de709989b72e7ff07ad901","../spache-revised/lib/index.js","../spam-assassin/lib/main.js","../0761f47ce483bfcb11af2c2bbf2595","../spam-assassin/lib/index.js","../ssa-us-births-2000-2014/lib/main.js","../b2e3d51c11c5d61663816679e520a7","../ssa-us-births-2000-2014/lib/index.js","../standard-card-deck/lib/main.js","../ef4ce30a488211b510619a6c32b7e1","../standard-card-deck/lib/index.js","../stopwords-en/lib/main.js","../9e48ad10198f3cf61a65d01ba379ab","../stopwords-en/lib/index.js","../suthaharan-multi-hop-sensor-network/lib/main.js","../0073857ece6493147a20daec29e72f","../suthaharan-multi-hop-sensor-network/lib/index.js","../suthaharan-single-hop-sensor-network/lib/main.js","../cb701f12e82fe757714cdbbb3a1b69","../suthaharan-single-hop-sensor-network/lib/index.js","../us-states-abbr/lib/main.js","../e5181f145dde7fe609678c44f12ed9","../us-states-abbr/lib/index.js","../us-states-capitals/lib/main.js","../61583ff6c7de0a2065333ed183b33b","../us-states-capitals/lib/index.js","../us-states-capitals-names/lib/main.js","../f0581b31c1b2392f42f19af8c861e9","../us-states-capitals-names/lib/index.js","../us-states-names/lib/main.js","../9d07f1e711d23237bab6c75447ff2f","../us-states-names/lib/index.js","../us-states-names-capitals/lib/main.js","../782e1f78d0a27c87292b20ee206e00","../us-states-names-capitals/lib/index.js","../lib/data.js","../lib/datasets.js","../lib/index.js"],"sourcesContent":["export default '/home/runner/work/datasets/datasets/afinn-96/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of English words rated for valence. An earlier version of AFINN-111.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ArrayArray} word ratings\n*\n* @example\n* var list = afinn96();\n* // returns [ ['abandon',-2], ['abandons',-2], ['abandoned',-2], ... ]\n*/\nfunction afinn96() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = afinn96;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of English words rated for valence. An earlier version of AFINN-111.\n*\n* @module @stdlib/datasets/afinn-96\n*\n* @example\n* var afinn96 = require( '@stdlib/datasets/afinn-96' );\n* var words = afinn96();\n* // returns [ ['abandon',-2], ['abandons',-2], ['abandoned',-2], ... ]\n*/\n\n// MODULES //\n\nvar afinn96 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = afinn96;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of English words rated for valence.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ArrayArray} word ratings\n*\n* @example\n* var list = afinn111();\n* // returns [ ['abandon',-2], ['abandoned',-2], ['abandons',-2], ['abducted',-2], ... ]\n*/\nfunction afinn111() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = afinn111;\n","export default '/home/runner/work/datasets/datasets/afinn-111/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of English words rated for valence.\n*\n* @module @stdlib/datasets/afinn-111\n*\n* @example\n* var afinn111 = require( '@stdlib/datasets/afinn-111' );\n* var words = afinn111();\n* // returns [ ['abandon',-2], ['abandoned',-2], ['abandons',-2], ['abducted',-2], ... ]\n*/\n\n// MODULES //\n\nvar afinn111 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = afinn111;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns Anscombe's quartet.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ArrayArray} Anscombe's quartet\n*\n* @example\n* var d = data();\n* // returns [[[10,8.04],...],[[10,9.14],...],[[10,7.46],...],[[8,6.58],...]]\n*/\nfunction data() {\n\tvar d = readJSON( fpath, opts );\n\tif ( d instanceof Error ) {\n\t\tthrow d;\n\t}\n\treturn d;\n}\n\n\n// EXPORTS //\n\nmodule.exports = data;\n","export default '/home/runner/work/datasets/datasets/anscombes-quartet/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Anscombe's quartet.\n*\n* @module @stdlib/datasets/anscombes-quartet\n*\n* @example\n* var data = require( '@stdlib/datasets/anscombes-quartet' );\n* var d = data();\n* // returns [[[10,8.04],...],[[10,9.14],...],[[10,7.46],...],[[8,6.58],...]]\n*/\n\n// MODULES //\n\nvar data = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = data;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a random sample of 534 workers from the Current Population Survey (CPS) from 1985.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} data\n*\n* @example\n* var data = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/berndt-cps-wages-1985/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A random sample of 534 workers from the Current Population Survey (CPS) from 1985.\n*\n* @module @stdlib/datasets/berndt-cps-wages-1985\n*\n* @example\n* var dataset = require( '@stdlib/datasets/berndt-cps-wages-1985' );\n*\n* var data = dataset();\n* // returns [{...},{...},...]\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns US birth data from 1969 to 1988, as provided by the Center for Disease Control and Prevention's National Center for Health Statistics.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} birth data\n*\n* @example\n* var data = dataset();\n* // returns [ {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/cdc-nchs-us-births-1969-1988/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* US birth data from 1969 to 1988, as provided by the Center for Disease Control and Prevention's National Center for Health Statistics.\n*\n* @module @stdlib/datasets/cdc-nchs-us-births-1969-1988\n*\n* @example\n* var dataset = require( '@stdlib/datasets/cdc-nchs-us-births-1969-1988' );\n* var data = dataset();\n* // returns [ {...}, ... ]\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns US birth data from 1994 to 2003, as provided by the Center for Disease Control and Prevention's National Center for Health Statistics.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} birth data\n*\n* @example\n* var data = dataset();\n* // returns [ {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/cdc-nchs-us-births-1994-2003/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* US birth data from 1994 to 2003, as provided by the Center for Disease Control and Prevention's National Center for Health Statistics.\n*\n* @module @stdlib/datasets/cdc-nchs-us-births-1994-2003\n*\n* @example\n* var dataset = require( '@stdlib/datasets/cdc-nchs-us-births-1994-2003' );\n* var data = dataset();\n* // returns [ {...}, ... ]\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns US infant mortality data, by race, from 1915 to 2013, as provided by the Center for Disease Control and Prevention's National Center for Health Statistics.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} infant mortality data\n*\n* @example\n* var data = dataset();\n* // returns { 'black': [...], 'white': [...] }\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/cdc-nchs-us-infant-mortality-bw-1915-2013/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* US infant mortality data, by race, from 1915 to 2013, as provided by the Center for Disease Control and Prevention's National Center for Health Statistics.\n*\n* @module @stdlib/datasets/cdc-nchs-us-infant-mortality-bw-1915-2013\n*\n* @example\n* var dataset = require( '@stdlib/datasets/cdc-nchs-us-infant-mortality-bw-1915-2013' );\n* var data = dataset();\n* // returns { 'black': [...], 'white': [...] }\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/cmudict/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar format = require( '@stdlib/string/format' );\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar keys = [ 'dict', 'phones', 'symbols', 'vp' ];\nvar dataCMU = {\n\t'dict': resolve( __dirname, '..', 'data', 'dict.json' ),\n\t'phones': resolve( __dirname, '..', 'data', 'phones.json' ),\n\t'symbols': resolve( __dirname, '..', 'data', 'symbols.json' ),\n\t'vp': resolve( __dirname, '..', 'data', 'vp.json' )\n};\nvar fopts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns datasets from the Carnegie Mellon Pronouncing Dictionary (CMUdict).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @param {Options} [options] - options object\n* @param {string} [options.data] - dataset name\n* @throws {Error} unable to read data\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} must provide a recognized dataset name\n* @returns {(Object|StringArray)} dataset(s)\n*\n* @example\n* var data = cmudict();\n* // returns <Object>\n*\n* @example\n* var data = cmudict({\n*\t'data': 'symbols'\n* });\n* // returns <Array>\n*/\nfunction cmudict( options ) {\n\tvar opts;\n\tvar err;\n\tvar key;\n\tvar out;\n\tvar val;\n\tvar i;\n\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.data ) {\n\t\t\tif ( !hasOwnProp( dataCMU, opts.data ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'data', keys.join( '\", \"' ), opts.data ) );\n\t\t\t}\n\t\t\tout = readJSON( dataCMU[ opts.data ], fopts );\n\t\t\tif ( out instanceof Error ) {\n\t\t\t\tthrow out;\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n\tout = {};\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tval = readJSON( dataCMU[ key ] );\n\t\tif ( val instanceof Error ) {\n\t\t\tthrow val;\n\t\t}\n\t\tout[ key ] = val;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cmudict;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The Carnegie Mellon Pronouncing Dictionary (CMUdict).\n*\n* @module @stdlib/datasets/cmudict\n*\n* @example\n* var dict = require( '@stdlib/datasets/cmudict' );\n*\n* var data = dict();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar dict = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dict;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of familiar American-English words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} words\n*\n* @example\n* var list = words();\n* // returns [ 'a', 'able', 'aboard', 'about', 'above', ... ]\n*/\nfunction words() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = words;\n","export default '/home/runner/work/datasets/datasets/dale-chall-new/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of familiar American-English words.\n*\n* @module @stdlib/datasets/dale-chall-new\n*\n* @example\n* var words = require( '@stdlib/datasets/dale-chall-new' );\n*\n* var data = words();\n* // returns [ 'a', 'able', 'aboard', 'about', 'above', ... ]\n*/\n\n// MODULES //\n\nvar words = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = words;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns an emoji database.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} emoji database\n*\n* @example\n* var data = emoji();\n* // returns [ {...}, ... ]\n*/\nfunction emoji() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = emoji;\n","export default '/home/runner/work/datasets/datasets/emoji/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Emoji.\n*\n* @module @stdlib/datasets/emoji\n*\n* @example\n* var emoji = require( '@stdlib/datasets/emoji' );\n*\n* var data = emoji();\n* // returns [ {...}, ... ]\n*/\n\n// MODULES //\n\nvar emoji = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = emoji;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns an object mapping emoji codes to pictographs.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Object} codes to pictographs\n*\n* @example\n* var tbl = table();\n* // returns {...}\n*/\nfunction table() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = table;\n","export default '/home/runner/work/datasets/datasets/emoji-code-picto/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map emoji codes to pictographs.\n*\n* @module @stdlib/datasets/emoji-code-picto\n*\n* @example\n* var table = require( '@stdlib/datasets/emoji-code-picto' );\n* var tbl = table();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar table = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = table;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns an object mapping emoji pictographs to codes.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Object} pictographs to codes\n*\n* @example\n* var tbl = table();\n* // returns {...}\n*/\nfunction table() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = table;\n","export default '/home/runner/work/datasets/datasets/emoji-picto-code/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map emoji pictographs to codes.\n*\n* @module @stdlib/datasets/emoji-picto-code\n*\n* @example\n* var table = require( '@stdlib/datasets/emoji-picto-code' );\n* var tbl = table();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar table = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = table;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'names.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of common female first names in English speaking countries.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} female first names\n*\n* @example\n* var list = names();\n* // returns [ 'Aaren', 'Aarika', 'Abagael', 'Abagail', 'Abbe', ... ]\n*/\nfunction names() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = names;\n","export default '/home/runner/work/datasets/datasets/female-first-names-en/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of common female first names in English speaking countries.\n*\n* @module @stdlib/datasets/female-first-names-en\n*\n* @example\n* var names = require( '@stdlib/datasets/female-first-names-en' );\n*\n* var data = names();\n* // returns [ 'Aaren', 'Aarika', 'Abagael', 'Abagail', 'Abbe', ... ]\n*/\n\n// MODULES //\n\nvar names = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = names;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns FiveThirtyEight reader responses to a food frequency questionnaire (FFQ).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} FFQ data\n*\n* @example\n* var data = dataset();\n* // returns [ {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/fivethirtyeight-ffq/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* FiveThirtyEight reader responses to a food frequency questionnaire (FFQ).\n*\n* @module @stdlib/datasets/fivethirtyeight-ffq\n*\n* @example\n* var dataset = require( '@stdlib/datasets/fivethirtyeight-ffq' );\n* var data = dataset();\n* // returns [ {...}, ... ]\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns wage rates of U.S. workers that have not changed jobs within the year.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} data\n*\n* @example\n* var data = wages();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction wages() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = wages;\n","export default '/home/runner/work/datasets/datasets/frb-sf-wage-rigidity/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Wage rates of U.S. workers that have not changed jobs within the year.\n*\n* @module @stdlib/datasets/frb-sf-wage-rigidity\n*\n* @example\n* var wages = require( '@stdlib/datasets/frb-sf-wage-rigidity' );\n*\n* var data = wages();\n* // returns [{...},{...},...]\n*/\n\n// MODULES //\n\nvar wages = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = wages;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} housing data\n*\n* @example\n* var data = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/harrison-boston-house-prices/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978).\n*\n* @module @stdlib/datasets/harrison-boston-house-prices\n*\n* @example\n* var dataset = require( '@stdlib/datasets/harrison-boston-house-prices' );\n*\n* var data = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a (corrected) dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} housing data\n*\n* @example\n* var data = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/harrison-boston-house-prices-corrected/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A (corrected) dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978).\n*\n* @module @stdlib/datasets/harrison-boston-house-prices-corrected\n*\n* @example\n* var dataset = require( '@stdlib/datasets/harrison-boston-house-prices-corrected' );\n*\n* var data = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns fifteen observations of the vertical semidiameter of Venus, made by Lieutenant Herndon, with the meridian circle at Washington, in the year 1846.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {NumberArray} data\n*\n* @example\n* var d = data();\n* // returns [ -0.30, -0.44, ..., 0.39, 0.10 ]\n*/\nfunction data() {\n\tvar d = readJSON( fpath, opts );\n\tif ( d instanceof Error ) {\n\t\tthrow d;\n\t}\n\treturn d;\n}\n\n\n// EXPORTS //\n\nmodule.exports = data;\n","export default '/home/runner/work/datasets/datasets/herndon-venus-semidiameters/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fifteen observations of the vertical semidiameter of Venus, made by Lieutenant Herndon, with the meridian circle at Washington, in the year 1846.\n*\n* @module @stdlib/datasets/herndon-venus-semidiameters\n*\n* @example\n* var data = require( '@stdlib/datasets/herndon-venus-semidiameters' );\n*\n* var d = data();\n* // returns [ -0.30, -0.44, ..., 0.39, 0.10 ]\n*/\n\n// MODULES //\n\nvar data = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = data;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns Acanthus mollis.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-acanthus-mollis/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Acanthus mollis as a `buffer` object.\n*\n* @module @stdlib/datasets/img-acanthus-mollis\n*\n* @example\n* var image = require( '@stdlib/datasets/img-acanthus-mollis' );\n*\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns an image of an airplane, viewed from above looking down.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-airplane-from-above/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Image of an airplane, viewed from above looking down, as a `buffer` object.\n*\n* @module @stdlib/datasets/img-airplane-from-above\n*\n* @example\n* var image = require( '@stdlib/datasets/img-airplane-from-above' );\n*\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns Allium oreophilum (pink lily leek).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-allium-oreophilum/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Allium oreophilum (pink lily leek) as a `buffer` object.\n*\n* @module @stdlib/datasets/img-allium-oreophilum\n*\n* @example\n* var image = require( '@stdlib/datasets/img-allium-oreophilum' );\n*\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns an image of Black Canyon.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-black-canyon/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Image of Black Canyon as a `buffer` object.\n*\n* @module @stdlib/datasets/img-black-canyon\n*\n* @example\n* var image = require( '@stdlib/datasets/img-black-canyon' );\n*\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns an image of an abandoned dust bowl home.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-dust-bowl-home/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Image of an abandoned dust bowl home as a `buffer` object.\n*\n* @module @stdlib/datasets/img-dust-bowl-home\n*\n* @example\n* var image = require( '@stdlib/datasets/img-dust-bowl-home' );\n*\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns an image of a French alpine landscape.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-french-alpine-landscape/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Image of a French alpine landscape.\n*\n* @module @stdlib/datasets/img-french-alpine-landscape\n*\n* @example\n* var image = require( '@stdlib/datasets/img-french-alpine-landscape' );\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns twenty-four views of a house cat.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-locomotion-house-cat/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Twenty-four views of a house cat.\n*\n* @module @stdlib/datasets/img-locomotion-house-cat\n*\n* @example\n* var image = require( '@stdlib/datasets/img-locomotion-house-cat' );\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns forty-eight views of a nude male moving in place.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-locomotion-nude-male/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Forty-eight views of a nude male moving in place.\n*\n* @module @stdlib/datasets/img-locomotion-nude-male\n*\n* @example\n* var image = require( '@stdlib/datasets/img-locomotion-nude-male' );\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns an image of sheep in a pastoral setting.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-march-pastoral/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Image of sheep in a pastoral setting.\n*\n* @module @stdlib/datasets/img-march-pastoral\n*\n* @example\n* var image = require( '@stdlib/datasets/img-march-pastoral' );\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'image.jpg' );\n\n\n// MAIN //\n\n/**\n* Returns an image of boats in a river in Nagasaki.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Buffer} image\n*\n* @example\n* var img = image();\n* // returns <Buffer>\n*/\nfunction image() {\n\tvar data = readFile( fpath );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","export default '/home/runner/work/datasets/datasets/img-nagasaki-boats/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Image of boats in a river in Nagasaki.\n*\n* @module @stdlib/datasets/img-nagasaki-boats\n*\n* @example\n* var image = require( '@stdlib/datasets/img-nagasaki-boats' );\n*\n* var img = image();\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar image = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = image;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of negative opinion words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} words\n*\n* @example\n* var list = words();\n* // returns [ '2-faced', '2-faces', 'abnormal', 'abolish', ... ]\n*/\nfunction words() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = words;\n","export default '/home/runner/work/datasets/datasets/liu-negative-opinion-words-en/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of negative opinion words.\n*\n* @module @stdlib/datasets/liu-negative-opinion-words-en\n*\n* @example\n* var words = require( '@stdlib/datasets/liu-negative-opinion-words-en' );\n* var list = words();\n* // returns [ '2-faced', '2-faces', 'abnormal', 'abolish', ... ]\n*/\n\n// MODULES //\n\nvar words = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = words;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of positive opinion words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} words\n*\n* @example\n* var list = words();\n* // returns [ 'a+', 'abound', 'abounds', 'abundance', ... ]\n*/\nfunction words() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = words;\n","export default '/home/runner/work/datasets/datasets/liu-positive-opinion-words-en/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of positive opinion words.\n*\n* @module @stdlib/datasets/liu-positive-opinion-words-en\n*\n* @example\n* var words = require( '@stdlib/datasets/liu-positive-opinion-words-en' );\n* var list = words();\n* // returns [ 'a+', 'abound', 'abounds', 'abundance', ... ]\n*/\n\n// MODULES //\n\nvar words = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = words;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'names.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of common male first names in English speaking countries.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} male first names\n*\n* @example\n* var list = names();\n* // returns [ 'Aaron', 'Ab', 'Abba', 'Abbe', 'Abbey', ... ]\n*/\nfunction names() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = names;\n","export default '/home/runner/work/datasets/datasets/male-first-names-en/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of common male first names in English speaking countries.\n*\n* @module @stdlib/datasets/male-first-names-en\n*\n* @example\n* var names = require( '@stdlib/datasets/male-first-names-en' );\n*\n* var data = names();\n* // returns [ 'Aaron', 'Ab', 'Abba', 'Abbe', 'Abbey', ... ]\n*/\n\n// MODULES //\n\nvar names = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = names;\n","export default '/home/runner/work/datasets/datasets/minard-napoleons-march/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar keys = [ 'army', 'cities', 'labels', 'rivers', 'temperature' ];\nvar minardData = {\n\t'army': resolve( __dirname, '..', 'data', 'army.json' ),\n\t'cities': resolve( __dirname, '..', 'data', 'cities.json' ),\n\t'labels': resolve( __dirname, '..', 'data', 'labels.json' ),\n\t'rivers': resolve( __dirname, '..', 'data', 'rivers.geo.json' ),\n\t'temperature': resolve( __dirname, '..', 'data', 'temperature.json' )\n};\nvar fopts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns datasets for Charles Joseph Minard's cartographic depiction of Napoleon's Russian campaign of 1812.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @param {Options} [options] - options object\n* @param {string} [options.data] - dataset name\n* @throws {Error} unable to read data\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} must provide a recognized dataset name\n* @returns {(Object|ObjectArray)} dataset(s)\n*\n* @example\n* var data = minard();\n* // returns <Object>\n*\n* @example\n* var data = minard({\n*\t'data': 'army'\n* });\n* // returns <ObjectArray>\n*/\nfunction minard( options ) {\n\tvar opts;\n\tvar err;\n\tvar key;\n\tvar out;\n\tvar val;\n\tvar i;\n\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.data ) {\n\t\t\tif ( !hasOwnProp( minardData, opts.data ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'data', keys.join( '\", \"' ), opts.data ) );\n\t\t\t}\n\t\t\tout = readJSON( minardData[ opts.data ], fopts );\n\t\t\tif ( out instanceof Error ) {\n\t\t\t\tthrow out;\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n\tout = {};\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tval = readJSON( minardData[ key ] );\n\t\tif ( val instanceof Error ) {\n\t\t\tthrow val;\n\t\t}\n\t\tout[ key ] = val;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = minard;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Data for Charles Joseph Minard's cartographic depiction of Napoleon's Russian campaign of 1812.\n*\n* @module @stdlib/datasets/minard-napoleons-march\n*\n* @example\n* var minard = require( '@stdlib/datasets/minard-napoleons-march' );\n*\n* var data = minard();\n* // returns {...}\n*\n* @example\n* var minard = require( '@stdlib/datasets/minard-napoleons-march' );\n*\n* var opts = {\n*     'data': 'army'\n* };\n*\n* var data = minard( opts );\n* // returns [{...},{...},...]\n*/\n\n// MODULES //\n\nvar minard = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = minard;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\nvar replace = require( '@stdlib/string/replace' );\nvar fileList = require( './../data/file_list.json' );\n\n\n// VARIABLES //\n\nvar dataPath = resolve( __dirname, '..', 'data' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns the text of Moby Dick.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} data\n*\n* @example\n* var data = text();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction text() {\n\tvar fpath;\n\tvar data;\n\tvar text;\n\tvar i;\n\n\tdata = new Array( 139 );\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tfpath = join( dataPath, replace( fileList[ i ], 'txt', 'json' ) );\n\t\ttext = readJSON( fpath, opts );\n\t\tif ( text instanceof Error ) {\n\t\t\tthrow text;\n\t\t}\n\t\tdata[ i ] = text;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = text;\n","export default '/home/runner/work/datasets/datasets/moby-dick/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The text of Moby Dick by Herman Melville.\n*\n* @module @stdlib/datasets/moby-dick\n*\n* @example\n* var text = require( '@stdlib/datasets/moby-dick' );\n*\n* var data = text();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar text = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = text;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of month names (English).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} month names\n*\n* @example\n* var list = months();\n* // returns ['January','February','March','April','May','June','July','August','September','October','November','December']\n*/\nfunction months() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = months;\n","export default '/home/runner/work/datasets/datasets/month-names-en/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Month names (English).\n*\n* @module @stdlib/datasets/month-names-en\n*\n* @example\n* var months = require( '@stdlib/datasets/month-names-en' );\n*\n* var list = months();\n* // returns ['January','February','March','April','May','June','July','August','September','October','November','December']\n*/\n\n// MODULES //\n\nvar months = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = months;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns the dataset for Nightingale's famous polar area diagram.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} dataset\n*\n* @example\n* var data = rose();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction rose() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rose;\n","export default '/home/runner/work/datasets/datasets/nightingales-rose/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dataset for Nightingale's famous polar area diagram.\n*\n* @module @stdlib/datasets/nightingales-rose\n*\n* @example\n* var rose = require( '@stdlib/datasets/nightingales-rose' );\n* var data = rose();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar rose = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = rose;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a (corrected) dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} housing data\n*\n* @example\n* var data = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/pace-boston-house-prices/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A (corrected) dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978).\n*\n* @module @stdlib/datasets/pace-boston-house-prices\n*\n* @example\n* var dataset = require( '@stdlib/datasets/pace-boston-house-prices' );\n*\n* var data = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns an array containing the first 100,000 prime numbers.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {PositiveIntegerArray} primes\n*\n* @example\n* var list = primes();\n* // returns [ 2, 3, 5, ... ]\n*/\nfunction primes() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = primes;\n","export default '/home/runner/work/datasets/datasets/primes-100k/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Array containing the first 100,000 prime numbers.\n*\n* @module @stdlib/datasets/primes-100k\n*\n* @example\n* var primes = require( '@stdlib/datasets/primes-100k' );\n*\n* var list = primes();\n* // returns [ 2, 3, 5, ... ]\n*/\n\n// MODULES //\n\nvar primes = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = primes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of Finnish stop words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'aiemmin', 'aika', 'aikaa', 'aikaan', 'aikaisemmin', ... ]\n*/\nfunction stopwords() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","export default '/home/runner/work/datasets/datasets/savoy-stopwords-fin/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of Finnish stop words.\n*\n* @module @stdlib/datasets/savoy-stopwords-fin\n*\n* @example\n* var stopwords = require( '@stdlib/datasets/savoy-stopwords-fin' );\n* var list = stopwords();\n* // returns [ 'aiemmin', 'aika', 'aikaa', 'aikaan', 'aikaisemmin', ... ]\n*/\n\n// MODULES //\n\nvar stopwords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of French stop words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'à', 'â', 'abord', 'afin', 'ah', ... ]\n*/\nfunction stopwords() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","export default '/home/runner/work/datasets/datasets/savoy-stopwords-fr/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of French stop words.\n*\n* @module @stdlib/datasets/savoy-stopwords-fr\n*\n* @example\n* var stopwords = require( '@stdlib/datasets/savoy-stopwords-fr' );\n* var list = stopwords();\n* // returns [ 'a', 'à', 'â', 'abord', 'afin', 'ah', ... ]\n*/\n\n// MODULES //\n\nvar stopwords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of German stop words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'ab', 'aber', 'ach', ... ]\n*/\nfunction stopwords() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","export default '/home/runner/work/datasets/datasets/savoy-stopwords-ger/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of German stop words.\n*\n* @module @stdlib/datasets/savoy-stopwords-ger\n*\n* @example\n* var stopwords = require( '@stdlib/datasets/savoy-stopwords-ger' );\n* var list = stopwords();\n* // returns [ 'a', 'ab', 'aber', 'ach', ... ]\n*/\n\n// MODULES //\n\nvar stopwords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of Italian stop words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'abbastanza', 'accidenti', 'ad', 'adesso', ... ]\n*/\nfunction stopwords() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","export default '/home/runner/work/datasets/datasets/savoy-stopwords-it/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of Italian stop words.\n*\n* @module @stdlib/datasets/savoy-stopwords-it\n*\n* @example\n* var stopwords = require( '@stdlib/datasets/savoy-stopwords-it' );\n* var list = stopwords();\n* // returns [ 'a', 'abbastanza', 'accidenti', 'ad', 'adesso', ... ]\n*/\n\n// MODULES //\n\nvar stopwords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of Portuguese stop words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'à', 'adeus', 'agora', 'aí', 'ainda', ... ]\n*/\nfunction stopwords() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","export default '/home/runner/work/datasets/datasets/savoy-stopwords-por/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of Portuguese stop words.\n*\n* @module @stdlib/datasets/savoy-stopwords-por\n*\n* @example\n* var stopwords = require( '@stdlib/datasets/savoy-stopwords-por' );\n* var list = stopwords();\n* // returns [ 'a', 'à', 'adeus', 'agora', 'aí', 'ainda', ... ]\n*/\n\n// MODULES //\n\nvar stopwords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of Spanish stop words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'acuerdo', 'adelante', 'ademas', 'además', ... ]\n*/\nfunction stopwords() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","export default '/home/runner/work/datasets/datasets/savoy-stopwords-sp/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of Spanish stop words.\n*\n* @module @stdlib/datasets/savoy-stopwords-sp\n*\n* @example\n* var stopwords = require( '@stdlib/datasets/savoy-stopwords-sp' );\n* var list = stopwords();\n* // returns [ 'a', 'acuerdo', 'adelante', 'ademas', 'además', ... ]\n*/\n\n// MODULES //\n\nvar stopwords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of Swedish stop words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'aderton', 'adertonde', 'adjö', 'aldrig', 'alla', 'allas', ... ]\n*/\nfunction stopwords() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","export default '/home/runner/work/datasets/datasets/savoy-stopwords-swe/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of Swedish stop words.\n*\n* @module @stdlib/datasets/savoy-stopwords-swe\n*\n* @example\n* var stopwords = require( '@stdlib/datasets/savoy-stopwords-swe' );\n* var list = stopwords();\n* // returns [ 'aderton', 'adertonde', 'adjö', 'aldrig', 'alla', 'allas', ... ]\n*/\n\n// MODULES //\n\nvar stopwords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isPositiveIntegerArray = require( '@stdlib/assert/is-positive-integer-array' ).primitives;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {(string|StringArray)} [options.name] - President name(s)\n* @param {(PositiveInteger|PositiveIntegerArray)} [options.year] - year(s)\n* @param {PositiveIntegerArray} [options.range] - year range\n* @param {(string|StringArray)} [options.party] - political party\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'range': [ 1942, 2008 ],\n*     'president': 'Barack Obama'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'name' ) ) {\n\t\topts.name = options.name;\n\t\tif (\n\t\t\t!isString( opts.name ) &&\n\t\t\t!isStringArray( opts.name )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string or an array of strings. Option: `%s`.', 'name', opts.name ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'year' ) ) {\n\t\topts.year = options.year;\n\t\tif (\n\t\t\t!isPositiveInteger( opts.year ) &&\n\t\t\t!isPositiveIntegerArray( opts.year )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer or an array of positive integers. Option: `%s`.', 'year', opts.year ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'range' ) ) {\n\t\topts.range = options.range;\n\t\tif (\n\t\t\t!isPositiveIntegerArray( opts.range ) ||\n\t\t\topts.range.length !== 2\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer array of length two. Option: `%s`.', 'range', opts.range ) );\n\t\t}\n\t\tif ( opts.range[ 0 ] < 1790 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` cannot be less than `1790`. Option: `%s`.', 'range[0]', opts.range ) );\n\t\t}\n\t\tif ( opts.range[ 1 ] > 5000 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` cannot be greater than `5000`. Option: `%s`.', 'range[1]', opts.range ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'party' ) ) {\n\t\topts.party = options.party;\n\t\tif (\n\t\t\t!isString( opts.party ) &&\n\t\t\t!isStringArray( opts.party )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string or an array of strings. Option: `%s`.', 'party', opts.party ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\n\n\n// MAIN //\n\nvar dir = join( __dirname, '..', 'data' );\n\n\n// EXPORTS //\n\nmodule.exports = dir;\n","export default '/home/runner/work/datasets/datasets/sotu/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fs = require( 'fs' );\nvar join = require( 'path' ).join;\nvar readDir = require( '@stdlib/fs/read-dir' ).sync;\nvar extname = require( '@stdlib/utils/extname' );\nvar dataDir = require( './data_dir.js' );\nvar RE = require( './re_filename.js' );\n\n\n// VARIABLES //\n\nvar list;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a sorted list of JSON data file filenames by reading the file system.\n*\n* @private\n* @returns {StringArray} filenames\n*/\nfunction read() {\n\tvar fpath;\n\tvar files;\n\tvar stats;\n\tvar out;\n\tvar f;\n\tvar i;\n\n\tfiles = readDir( dataDir );\n\tout = [];\n\tfor ( i = 0; i < files.length; i++ ) {\n\t\tf = files[ i ];\n\t\tif ( extname( f ) === '.json' && RE.test( f ) ) {\n\t\t\tfpath = join( dataDir, f );\n\t\t\tstats = fs.statSync( fpath ); // eslint-disable-line node/no-sync\n\t\t\tif ( stats.isFile() ) {\n\t\t\t\tout.push( f );\n\t\t\t}\n\t\t}\n\t}\n\treturn out.sort();\n}\n\n\n// MAIN //\n\nlist = read();\n\n\n// EXPORTS //\n\nmodule.exports = list;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture various parts of a data file filename.\n*\n* Regular expression: `/^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `([0-9]{4})`\n*     -   capture a sequence of four numbers (year)\n*\n* -   `_`\n*     -   a `_` literal\n*\n* -   `([\\S\\s]+)`\n*     -   capture one or more characters (name)\n*\n* -   `_`\n*     -   a `_` literal\n*\n* -   `([a-z]+)`\n*     -   capture one or more alphabetic characters (party)\n*\n* -   `\\..+`\n*     -   a `.` literal followed by one or more characters\n*\n* -   `$`\n*     -   end of string\n*\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/\n*/\nvar RE_FILENAME = /^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/;\n\n\n// EXPORTS //\n\nmodule.exports = RE_FILENAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by year.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar yr;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\tyr = FILES[ i ].match( RE )[ 1 ];\n\t\tif ( hasOwnProp( out, yr ) ) {\n\t\t\tout[ yr ].push( i );\n\t\t} else {\n\t\t\tout[ yr ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar capitalize = require( '@stdlib/string/capitalize' );\n\n\n// MAIN //\n\n/**\n* Converts a snakecase name to a normal name.\n*\n* @private\n* @param {string} str - snakecased name\n* @returns {string} normal name\n*/\nfunction unsnakecase( str ) {\n\tvar parts;\n\tvar i;\n\tparts = str.split( '_' );\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tparts[ i ] = capitalize( parts[ i ] );\n\t}\n\treturn parts.join( ' ' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = unsnakecase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\nvar unsnakecase = require( './unsnakecase.js' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by President name.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar id;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\t// Extract the President's name from the filename:\n\t\tid = FILES[ i ].match( RE )[ 2 ];\n\n\t\t// Convert the name from snakecase:\n\t\tid = unsnakecase( id );\n\n\t\tif ( hasOwnProp( out, id ) ) {\n\t\t\tout[ id ].push( i );\n\t\t} else {\n\t\t\tout[ id ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\nvar PARTY = require( './party.json' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by party.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar id;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\t// Extract a party abbreviation from a filename:\n\t\tid = FILES[ i ].match( RE )[ 3 ];\n\n\t\t// Convert the abbreviation to the full party name:\n\t\tid = PARTY[ id ];\n\n\t\tif ( hasOwnProp( out, id ) ) {\n\t\t\tout[ id ].push( i );\n\t\t} else {\n\t\t\tout[ id ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar files = require( './file_list.js' );\n\n\n// MAIN //\n\nvar db = new Array( files.length );\n\n\n// EXPORTS //\n\nmodule.exports = db;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Returns the union.\n*\n* @private\n* @param {...Array} arr - input arrays\n* @returns {Array} union\n*/\nfunction union() {\n\tvar cache;\n\tvar arr;\n\tvar i;\n\tvar j;\n\tcache = {};\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tarr = arguments[ i ];\n\t\tfor ( j = 0; j < arr.length; j++ ) {\n\t\t\tif ( !hasOwnProp( cache, arr[ j ] ) ) {\n\t\t\t\tcache[ arr[ j ] ] = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn objectKeys( cache );\n}\n\n\n// EXPORTS //\n\nmodule.exports = union;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Synchronously loads a JSON file.\n*\n* @private\n* @param {string} fpath - file path\n* @returns {Object} JSON\n*/\nfunction loadJSON( fpath ) {\n\treturn require( fpath ); // eslint-disable-line stdlib/no-dynamic-require\n}\n\n\n// EXPORTS //\n\nmodule.exports = loadJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar copy = require( '@stdlib/utils/copy' );\nvar dataDir = require( './data_dir.js' );\nvar FILES = require( './file_list.js' );\nvar db = require( './db.js' );\nvar loadJSON = require( './load_json.js' );\n\n\n// MAIN //\n\n/**\n* Returns file data.\n*\n* @private\n* @param {NonNegativeInteger} id - file id\n* @returns {Object} file data\n*/\nfunction getFile( id ) {\n\tvar fpath;\n\tvar data;\n\n\t// Check if we can return data from cache...\n\tif ( db[ id ] ) {\n\t\treturn copy( db[ id ] );\n\t}\n\t// Build the data file filename:\n\tfpath = join( dataDir, FILES[ id ] );\n\n\t// Synchronously load the data (prevents release of the zalgo):\n\tdata = loadJSON( fpath );\n\n\t// Save the data to cache:\n\tdb[ id ] = data;\n\n\t// Return a deep copy of the data:\n\treturn copy( data );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getFile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar removePunctuation = require( '@stdlib/string/remove-punctuation' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar INDEX_YEAR = require( './index_year.js' );\nvar INDEX_NAME = require( './index_name.js' );\nvar INDEX_PARTY = require( './index_party.js' );\nvar db = require( './db.js' );\nvar union = require( './union.js' );\nvar getFile = require( './get_file.js' );\n\n\n// MAIN //\n\n/**\n* Returns State of the Union addresses.\n*\n* @param {Options} [options] - options object\n* @param {(string|StringArray)} [options.name] - name of president(s)\n* @param {(PositiveInteger|PositiveIntegerArray)} [options.year] - year(s)\n* @param {PositiveIntegerArray} [options.range] - year range\n* @param {(string|StringArray)} [options.party] - political party\n* @throws {RangeError} unrecognized property value\n* @returns {ObjectArray} SOTU addresses\n*\n* @example\n* var speeches = sotu();\n* // returns <ObjectArray>\n*\n* @example\n* var speeches = sotu({\n*\t'name': [ 'Franklin D Roosevelt', 'William J. Clinton' ]\n* });\n* // returns <ObjectArray>\n*/\nfunction sotu( options ) {\n\tvar indices;\n\tvar opts;\n\tvar ids;\n\tvar err;\n\tvar out;\n\tvar i;\n\n\topts = {};\n\tif ( arguments.length > 0 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Normalize options...\n\tif ( isString( opts.name ) ) {\n\t\topts.name = [ opts.name ];\n\t}\n\tif ( opts.name ) {\n\t\tfor ( i = 0; i < opts.name.length; i++ ) {\n\t\t\topts.name[ i ] = removePunctuation( opts.name[ i ] );\n\t\t}\n\t}\n\tif ( isString( opts.party ) ) {\n\t\topts.party = [ opts.party ];\n\t}\n\tif ( isNumber( opts.year ) ) {\n\t\topts.year = [ opts.year ];\n\t}\n\t// Compute indices...\n\tindices = [];\n\tif ( opts.name ) {\n\t\tfor ( i = 0; i < opts.name.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_NAME, opts.name[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'name', opts.name.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_NAME[ opts.name[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.year ) {\n\t\tfor ( i = 0; i < opts.year.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_YEAR, opts.year[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'year', opts.year.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_YEAR[ opts.year[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.party ) {\n\t\tfor ( i = 0; i < opts.party.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_PARTY, opts.party[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'party', opts.party.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_PARTY[ opts.party[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.range ) {\n\t\tfor ( i = opts.range[ 0 ]; i <= opts.range[ 1 ]; i++ ) {\n\t\t\tids = INDEX_YEAR[ i ];\n\t\t\tif ( ids ) {\n\t\t\t\tindices.push( ids );\n\t\t\t}\n\t\t}\n\t}\n\tif ( indices.length ) {\n\t\tindices = union.apply( null, indices );\n\t} else {\n\t\t// If no options have been provided to limit the query range, return the entire dataset...\n\t\tfor ( i = 0; i < db.length; i++ ) {\n\t\t\tindices.push( i );\n\t\t}\n\t}\n\t// Retrieve the data from the database...\n\tout = [];\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tout.push( getFile( indices[i] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sotu;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* State of the Union addresses by U.S. presidents.\n*\n* @module @stdlib/datasets/sotu\n*\n* @example\n* var sotu = require( '@stdlib/datasets/sotu' );\n*\n* var speeches = sotu();\n* // returns <ObjectArray>\n*\n* @example\n* var sotu = require( '@stdlib/datasets/sotu' );\n*\n* var speeches = sotu({\n*     'name': [\n*         'Franklin D Roosevelt',\n*         'William J. Clinton'\n*      ]\n* });\n* // returns <ObjectArray>\n*/\n\n// MODULES //\n\nvar sotu = require( './sotu.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sotu;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of simple American-English words (revised Spache).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} words\n*\n* @example\n* var list = words();\n* // returns [ 'a', 'able', 'about', 'above', ... ]\n*/\nfunction words() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = words;\n","export default '/home/runner/work/datasets/datasets/spache-revised/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of simple American-English words (revised Spache).\n*\n* @module @stdlib/datasets/spache-revised\n*\n* @example\n* var words = require( '@stdlib/datasets/spache-revised' );\n*\n* var data = words();\n* // returns [ 'a', 'able', 'about', 'above', ... ]\n*/\n\n// MODULES //\n\nvar words = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = words;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\nvar replace = require( '@stdlib/string/replace' );\nvar fileList = require( './../data/file_list.json' );\n\n\n// VARIABLES //\n\nvar dataPath = resolve( __dirname, '..', 'data' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns the Spam Assassin public email corpus.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} data\n*\n* @example\n* var data = corpus();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction corpus() {\n\tvar fpath;\n\tvar data;\n\tvar text;\n\tvar i;\n\n\tdata = new Array( 6046 );\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tfpath = join( dataPath, replace( fileList[ i ], 'txt', 'json' ) );\n\t\ttext = readJSON( fpath, opts );\n\t\tif ( text instanceof Error ) {\n\t\t\tthrow text;\n\t\t}\n\t\tdata[ i ] = text;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = corpus;\n","export default '/home/runner/work/datasets/datasets/spam-assassin/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Spam Assassin public email corpus.\n*\n* @module @stdlib/datasets/spam-assassin\n*\n* @example\n* var corpus = require( '@stdlib/datasets/spam-assassin' );\n*\n* var data = corpus();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar corpus = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = corpus;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns US birth data from 2000 to 2014, as provided by the Social Security Administration.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} birth data\n*\n* @example\n* var data = dataset();\n* // returns [ {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/ssa-us-births-2000-2014/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* US birth data from 2000 to 2014, as provided by the Social Security Administration.\n*\n* @module @stdlib/datasets/ssa-us-births-2000-2014\n*\n* @example\n* var dataset = require( '@stdlib/datasets/ssa-us-births-2000-2014' );\n* var data = dataset();\n* // returns [ {...}, ... ]\n*/\n\n// MODULES //\n\nvar dataset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a string array containing two or three letter abbreviations for each card in a standard 52-card deck.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} cards\n*\n* @example\n* var list = cards();\n* // returns ['AC', '2C', '3C', ... ]\n*/\nfunction cards() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cards;\n","export default '/home/runner/work/datasets/datasets/standard-card-deck/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* String array containing two or three letter abbreviations for each card in a standard 52-card deck.\n*\n* @module @stdlib/datasets/standard-card-deck\n*\n* @example\n* var cards = require( '@stdlib/datasets/standard-card-deck' );\n*\n* var list = cards();\n* // returns ['AC', '2C', '3C', ... ]\n*/\n\n// MODULES //\n\nvar cards = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = cards;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'words.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of English stop words.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'about', 'above', 'across', 'actually', ... ]\n*/\nfunction stopwords() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","export default '/home/runner/work/datasets/datasets/stopwords-en/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of English stopwords.\n*\n* @module @stdlib/datasets/stopwords-en\n*\n* @example\n* var stopwords = require( '@stdlib/datasets/stopwords-en' );\n* var list = stopwords();\n* // returns [ 'a', 'about', 'above', 'across', 'actually', ... ]\n*/\n\n// MODULES //\n\nvar stopwords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stopwords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a dataset consisting of labeled wireless sensor network data set collected from a multi-hop wireless sensor network deployment using TelosB motes.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} dataset\n*\n* @example\n* var d = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/suthaharan-multi-hop-sensor-network/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Labeled wireless sensor network data set collected from a multi-hop wireless sensor network deployment using TelosB motes.\n*\n* @module @stdlib/datasets/suthaharan-multi-hop-sensor-network\n*\n* @example\n* var data = require( '@stdlib/datasets/suthaharan-multi-hop-sensor-network' );\n*\n* var d = data();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a dataset consisting of labeled wireless sensor network data set collected from a simple single-hop wireless sensor network deployment using TelosB motes.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} dataset\n*\n* @example\n* var d = dataset();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction dataset() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dataset;\n","export default '/home/runner/work/datasets/datasets/suthaharan-single-hop-sensor-network/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Labeled wireless sensor network data set collected from a simple single-hop wireless sensor network deployment using TelosB motes.\n*\n* @module @stdlib/datasets/suthaharan-single-hop-sensor-network\n*\n* @example\n* var data = require( '@stdlib/datasets/suthaharan-single-hop-sensor-network' );\n*\n* var d = data();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of US state two-letter abbreviations in alphabetical order according to state name.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} abbreviations\n*\n* @example\n* var data = abbr();\n* // returns [ 'AL', 'AK', 'AZ', ... ]\n*/\nfunction abbr() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = abbr;\n","export default '/home/runner/work/datasets/datasets/us-states-abbr/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of US state two-letter abbreviations in alphabetical order according to state name.\n*\n* @module @stdlib/datasets/us-states-abbr\n*\n* @example\n* var abbr = require( '@stdlib/datasets/us-states-abbr' );\n*\n* var data = abbr();\n* // returns [ 'AL', 'AK', 'AZ', ... ]\n*/\n\n// MODULES //\n\nvar abbr = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = abbr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of US state capitals in alphabetical order according to state name.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} capitals\n*\n* @example\n* var data = capitals();\n* // returns [ 'Montgomery', 'Juneau', 'Phoenix', 'Little Rock', ... ]\n*/\nfunction capitals() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = capitals;\n","export default '/home/runner/work/datasets/datasets/us-states-capitals/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of US state capitals in alphabetical order according to state name.\n*\n* @module @stdlib/datasets/us-states-capitals\n*\n* @example\n* var capitals = require( '@stdlib/datasets/us-states-capitals' );\n*\n* var data = capitals();\n* // returns [ 'Montgomery', 'Juneau', 'Phoenix', 'Little Rock', ... ]\n*/\n\n// MODULES //\n\nvar capitals = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = capitals;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns an object mapping US state capitals to state names.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Object} capitals to states\n*\n* @example\n* var tbl = table();\n* // returns {...}\n*/\nfunction table() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = table;\n","export default '/home/runner/work/datasets/datasets/us-states-capitals-names/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map US state capitals to state names.\n*\n* @module @stdlib/datasets/us-states-capitals-names\n*\n* @example\n* var table = require( '@stdlib/datasets/us-states-capitals-names' );\n* var tbl = table();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar table = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = table;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of US state names in alphabetical order.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @returns {StringArray} states\n*\n* @example\n* var data = names();\n* // returns [ 'Alabama', 'Alaska', 'Arizona', 'Arkansas', ... ]\n*/\nfunction names() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = names;\n","export default '/home/runner/work/datasets/datasets/us-states-names/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A list of US state names in alphabetical order.\n*\n* @module @stdlib/datasets/us-states-names\n*\n* @example\n* var names = require( '@stdlib/datasets/us-states-names' );\n*\n* var data = names();\n* // returns [ 'Alabama', 'Alaska', 'Arizona', 'Arkansas', ... ]\n*/\n\n// MODULES //\n\nvar names = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = names;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs/read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns an object mapping US state names to state capitals.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {Object} states to capitals\n*\n* @example\n* var tbl = table();\n* // returns {...}\n*/\nfunction table() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = table;\n","export default '/home/runner/work/datasets/datasets/us-states-names-capitals/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map US state names to state capitals.\n*\n* @module @stdlib/datasets/us-states-names-capitals\n*\n* @example\n* var table = require( '@stdlib/datasets/us-states-names-capitals' );\n* var tbl = table();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar table = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = table;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Namespace.\n*\n* @private\n* @namespace datasets\n*/\nvar datasets = {};\n\n/**\n* @private\n* @name AFINN_96\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/afinn-96}\n*/\nsetReadOnly( datasets, 'AFINN_96', require( './../afinn-96' ) );\n\n/**\n* @private\n* @name AFINN_111\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/afinn-111}\n*/\nsetReadOnly( datasets, 'AFINN_111', require( './../afinn-111' ) );\n\n/**\n* @private\n* @name ANSCOMBES_QUARTET\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/anscombes-quartet}\n*/\nsetReadOnly( datasets, 'ANSCOMBES_QUARTET', require( './../anscombes-quartet' ) );\n\n/**\n* @private\n* @name BERNDT_CPS_WAGES_1985\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/berndt-cps-wages-1985}\n*/\nsetReadOnly( datasets, 'BERNDT_CPS_WAGES_1985', require( './../berndt-cps-wages-1985' ) );\n\n/**\n* @private\n* @name CDC_NCHS_US_BIRTHS_1969_1988\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/cdc-nchs-us-births-1969-1988}\n*/\nsetReadOnly( datasets, 'CDC_NCHS_US_BIRTHS_1969_1988', require( './../cdc-nchs-us-births-1969-1988' ) );\n\n/**\n* @private\n* @name CDC_NCHS_US_BIRTHS_1994_2003\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/cdc-nchs-us-births-1994-2003}\n*/\nsetReadOnly( datasets, 'CDC_NCHS_US_BIRTHS_1994_2003', require( './../cdc-nchs-us-births-1994-2003' ) );\n\n/**\n* @private\n* @name CDC_NCHS_US_INFANT_MORTALITY_BW_1915_2013\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/cdc-nchs-us-infant-mortality-bw-1915-2013}\n*/\nsetReadOnly( datasets, 'CDC_NCHS_US_INFANT_MORTALITY_BW_1915_2013', require( './../cdc-nchs-us-infant-mortality-bw-1915-2013' ) );\n\n/**\n* @private\n* @name CMUDICT\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/cmudict}\n*/\nsetReadOnly( datasets, 'CMUDICT', require( './../cmudict' ) );\n\n/**\n* @private\n* @name DALE_CHALL_NEW\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/dale-chall-new}\n*/\nsetReadOnly( datasets, 'DALE_CHALL_NEW', require( './../dale-chall-new' ) );\n\n/**\n* @private\n* @name EMOJI\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/emoji}\n*/\nsetReadOnly( datasets, 'EMOJI', require( './../emoji' ) );\n\n/**\n* @private\n* @name EMOJI_CODE_PICTO\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/emoji-code-picto}\n*/\nsetReadOnly( datasets, 'EMOJI_CODE_PICTO', require( './../emoji-code-picto' ) );\n\n/**\n* @private\n* @name EMOJI_PICTO_CODE\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/emoji-picto-code}\n*/\nsetReadOnly( datasets, 'EMOJI_PICTO_CODE', require( './../emoji-picto-code' ) );\n\n/**\n* @private\n* @name FEMALE_FIRST_NAMES_EN\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/female-first-names-en}\n*/\nsetReadOnly( datasets, 'FEMALE_FIRST_NAMES_EN', require( './../female-first-names-en' ) );\n\n/**\n* @private\n* @name FIVETHIRTYEIGHT_FFQ\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/fivethirtyeight-ffq}\n*/\nsetReadOnly( datasets, 'FIVETHIRTYEIGHT_FFQ', require( './../fivethirtyeight-ffq' ) );\n\n/**\n* @private\n* @name FRB_SF_WAGE_RIGIDITY\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/frb-sf-wage-rigidity}\n*/\nsetReadOnly( datasets, 'FRB_SF_WAGE_RIGIDITY', require( './../frb-sf-wage-rigidity' ) );\n\n/**\n* @private\n* @name HARRISON_BOSTON_HOUSE_PRICES\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/harrison-boston-house-prices}\n*/\nsetReadOnly( datasets, 'HARRISON_BOSTON_HOUSE_PRICES', require( './../harrison-boston-house-prices' ) );\n\n/**\n* @private\n* @name HARRISON_BOSTON_HOUSE_PRICES_CORRECTED\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/harrison-boston-house-prices-corrected}\n*/\nsetReadOnly( datasets, 'HARRISON_BOSTON_HOUSE_PRICES_CORRECTED', require( './../harrison-boston-house-prices-corrected' ) );\n\n/**\n* @private\n* @name HERNDON_VENUS_SEMIDIAMETERS\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/herndon-venus-semidiameters}\n*/\nsetReadOnly( datasets, 'HERNDON_VENUS_SEMIDIAMETERS', require( './../herndon-venus-semidiameters' ) );\n\n/**\n* @private\n* @name IMG_ACANTHUS_MOLLIS\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-acanthus-mollis}\n*/\nsetReadOnly( datasets, 'IMG_ACANTHUS_MOLLIS', require( './../img-acanthus-mollis' ) );\n\n/**\n* @private\n* @name IMG_AIRPLANE_FROM_ABOVE\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-airplane-from-above}\n*/\nsetReadOnly( datasets, 'IMG_AIRPLANE_FROM_ABOVE', require( './../img-airplane-from-above' ) );\n\n/**\n* @private\n* @name IMG_ALLIUM_OREOPHILUM\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-allium-oreophilum}\n*/\nsetReadOnly( datasets, 'IMG_ALLIUM_OREOPHILUM', require( './../img-allium-oreophilum' ) );\n\n/**\n* @private\n* @name IMG_BLACK_CANYON\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-black-canyon}\n*/\nsetReadOnly( datasets, 'IMG_BLACK_CANYON', require( './../img-black-canyon' ) );\n\n/**\n* @private\n* @name IMG_DUST_BOWL_HOME\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-dust-bowl-home}\n*/\nsetReadOnly( datasets, 'IMG_DUST_BOWL_HOME', require( './../img-dust-bowl-home' ) );\n\n/**\n* @private\n* @name IMG_FRENCH_ALPINE_LANDSCAPE\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-french-alpine-landscape}\n*/\nsetReadOnly( datasets, 'IMG_FRENCH_ALPINE_LANDSCAPE', require( './../img-french-alpine-landscape' ) );\n\n/**\n* @private\n* @name IMG_LOCOMOTION_HOUSE_CAT\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-locomotion-house-cat}\n*/\nsetReadOnly( datasets, 'IMG_LOCOMOTION_HOUSE_CAT', require( './../img-locomotion-house-cat' ) );\n\n/**\n* @private\n* @name IMG_LOCOMOTION_NUDE_MALE\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-locomotion-nude-male}\n*/\nsetReadOnly( datasets, 'IMG_LOCOMOTION_NUDE_MALE', require( './../img-locomotion-nude-male' ) );\n\n/**\n* @private\n* @name IMG_MARCH_PASTORAL\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-march-pastoral}\n*/\nsetReadOnly( datasets, 'IMG_MARCH_PASTORAL', require( './../img-march-pastoral' ) );\n\n/**\n* @private\n* @name IMG_NAGASAKI_BOATS\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/img-nagasaki-boats}\n*/\nsetReadOnly( datasets, 'IMG_NAGASAKI_BOATS', require( './../img-nagasaki-boats' ) );\n\n/**\n* @private\n* @name LIU_NEGATIVE_OPINION_WORDS\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/liu-negative-opinion-words-en}\n*/\nsetReadOnly( datasets, 'LIU_NEGATIVE_OPINION_WORDS_EN', require( './../liu-negative-opinion-words-en' ) );\n\n/**\n* @private\n* @name LIU_POSITIVE_OPINION_WORDS\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/liu-positive-opinion-words-en}\n*/\nsetReadOnly( datasets, 'LIU_POSITIVE_OPINION_WORDS_EN', require( './../liu-positive-opinion-words-en' ) );\n\n/**\n* @private\n* @name MALE_FIRST_NAMES_EN\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/male-first-names-en}\n*/\nsetReadOnly( datasets, 'MALE_FIRST_NAMES_EN', require( './../male-first-names-en' ) );\n\n/**\n* @private\n* @name MINARD_NAPOLEONS_MARCH\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/minard-napoleons-march}\n*/\nsetReadOnly( datasets, 'MINARD_NAPOLEONS_MARCH', require( './../minard-napoleons-march' ) );\n\n/**\n* @private\n* @name MOBY_DICK\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/moby-dick}\n*/\nsetReadOnly( datasets, 'MOBY_DICK', require( './../moby-dick' ) );\n\n/**\n* @private\n* @name MONTH_NAMES_EN\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/month-names-en}\n*/\nsetReadOnly( datasets, 'MONTH_NAMES_EN', require( './../month-names-en' ) );\n\n/**\n* @private\n* @name NIGHTINGALES_ROSE\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/nightingales-rose}\n*/\nsetReadOnly( datasets, 'NIGHTINGALES_ROSE', require( './../nightingales-rose' ) );\n\n/**\n* @private\n* @name PACE_BOSTON_HOUSE_PRICES\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/pace-boston-house-prices}\n*/\nsetReadOnly( datasets, 'PACE_BOSTON_HOUSE_PRICES', require( './../pace-boston-house-prices' ) );\n\n/**\n* @private\n* @name PRIMES_100K\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/primes-100k}\n*/\nsetReadOnly( datasets, 'PRIMES_100K', require( './../primes-100k' ) );\n\n/**\n* @private\n* @name SAVOY_STOPWORDS_FIN\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/savoy-stopwords-fin}\n*/\nsetReadOnly( datasets, 'SAVOY_STOPWORDS_FIN', require( './../savoy-stopwords-fin' ) );\n\n/**\n* @private\n* @name SAVOY_STOPWORDS_FR\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/savoy-stopwords-fr}\n*/\nsetReadOnly( datasets, 'SAVOY_STOPWORDS_FR', require( './../savoy-stopwords-fr' ) );\n\n/**\n* @private\n* @name SAVOY_STOPWORDS_GER\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/savoy-stopwords-ger}\n*/\nsetReadOnly( datasets, 'SAVOY_STOPWORDS_GER', require( './../savoy-stopwords-ger' ) );\n\n/**\n* @private\n* @name SAVOY_STOPWORDS_IT\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/savoy-stopwords-it}\n*/\nsetReadOnly( datasets, 'SAVOY_STOPWORDS_IT', require( './../savoy-stopwords-it' ) );\n\n/**\n* @private\n* @name SAVOY_STOPWORDS_POR\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/savoy-stopwords-por}\n*/\nsetReadOnly( datasets, 'SAVOY_STOPWORDS_POR', require( './../savoy-stopwords-por' ) );\n\n/**\n* @private\n* @name SAVOY_STOPWORDS_SP\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/savoy-stopwords-sp}\n*/\nsetReadOnly( datasets, 'SAVOY_STOPWORDS_SP', require( './../savoy-stopwords-sp' ) );\n\n/**\n* @private\n* @name SAVOY_STOPWORDS_SWE\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/savoy-stopwords-swe}\n*/\nsetReadOnly( datasets, 'SAVOY_STOPWORDS_SWE', require( './../savoy-stopwords-swe' ) );\n\n/**\n* @private\n* @name SOTU\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/sotu}\n*/\nsetReadOnly( datasets, 'SOTU', require( './../sotu' ) );\n\n/**\n* @private\n* @name SPACHE_REVISED\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/spache-revised}\n*/\nsetReadOnly( datasets, 'SPACHE_REVISED', require( './../spache-revised' ) );\n\n/**\n* @private\n* @name SPAM_ASSASSIN\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/spam-assassin}\n*/\nsetReadOnly( datasets, 'SPAM_ASSASSIN', require( './../spam-assassin' ) );\n\n/**\n* @private\n* @name SSA_US_BIRTHS_2000_2014\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/ssa-us-births-2000-2014}\n*/\nsetReadOnly( datasets, 'SSA_US_BIRTHS_2000_2014', require( './../ssa-us-births-2000-2014' ) );\n\n/**\n* @private\n* @name STANDARD_CARD_DECK\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/standard-card-deck}\n*/\nsetReadOnly( datasets, 'STANDARD_CARD_DECK', require( './../standard-card-deck' ) );\n\n/**\n* @private\n* @name STOPWORDS_EN\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/stopwords-en}\n*/\nsetReadOnly( datasets, 'STOPWORDS_EN', require( './../stopwords-en' ) );\n\n/**\n* @private\n* @name SUTHAHARAN_MULTI_HOP_SENSOR_NETWORK\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/suthaharan-multi-hop-sensor-network}\n*/\nsetReadOnly( datasets, 'SUTHAHARAN_MULTI_HOP_SENSOR_NETWORK', require( './../suthaharan-multi-hop-sensor-network' ) );\n\n/**\n* @private\n* @name SUTHAHARAN_SINGLE_HOP_SENSOR_NETWORK\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/suthaharan-single-hop-sensor-network}\n*/\nsetReadOnly( datasets, 'SUTHAHARAN_SINGLE_HOP_SENSOR_NETWORK', require( './../suthaharan-single-hop-sensor-network' ) );\n\n/**\n* @private\n* @name US_STATES_ABBR\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/us-states-abbr}\n*/\nsetReadOnly( datasets, 'US_STATES_ABBR', require( './../us-states-abbr' ) );\n\n/**\n* @private\n* @name US_STATES_CAPITALS\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/us-states-capitals}\n*/\nsetReadOnly( datasets, 'US_STATES_CAPITALS', require( './../us-states-capitals' ) );\n\n/**\n* @private\n* @name US_STATES_CAPITALS_NAMES\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/us-states-capitals-names}\n*/\nsetReadOnly( datasets, 'US_STATES_CAPITALS_NAMES', require( './../us-states-capitals-names' ) );\n\n/**\n* @private\n* @name US_STATES_NAMES\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/us-states-names}\n*/\nsetReadOnly( datasets, 'US_STATES_NAMES', require( './../us-states-names' ) );\n\n/**\n* @private\n* @name US_STATES_NAMES_CAPITALS\n* @memberof datasets\n* @readonly\n* @constant\n* @type {Function}\n* @see {@link module:@stdlib/datasets/us-states-names-capitals}\n*/\nsetReadOnly( datasets, 'US_STATES_NAMES_CAPITALS', require( './../us-states-names-capitals' ) );\n\n\n// EXPORTS //\n\nmodule.exports = datasets;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar data = require( './data.js' );\n\n\n// MAIN //\n\n/**\n* Returns datasets.\n*\n* @param {string} name - dataset name\n* @param {Options} [options] - dataset options\n* @throws {RangeError} unsupported/unrecognized dataset name\n* @returns {*} dataset\n*/\nfunction datasets( name ) {\n\tvar args;\n\tvar i;\n\n\targs = new Array( arguments.length-1 );\n\tfor ( i = 0; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i+1 ];\n\t}\n\tif ( hasOwnProp( data, name ) ) {\n\t\treturn data[ name ].apply( null, args );\n\t}\n\tthrow new RangeError( format( 'invalid value. Unsupported/unrecognized dataset name. Value: `%s`.', name ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = datasets;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Datasets.\n*\n* @module @stdlib/datasets\n*\n* @example\n* var datasets = require( '@stdlib/datasets' );\n*\n* var data = datasets( 'US_STATES_NAMES' );\n* // returns [...]\n*/\n\n// MODULES //\n\nvar datasets = require( './datasets.js' );\n\n\n// EXPORTS //\n\nmodule.exports = datasets;\n"],"names":["resolve","require","readJSON","sync","fpath","opts","encoding","module","exports","data","Error","lib","d","__dirname$N","format","hasOwnProp","validate","keys","dataCMU","dict","__dirname","phones","symbols","vp","fopts","options","err","key","out","val","i","arguments","length","RangeError","join","readFile","__dirname$p","minardData","army","cities","labels","rivers","temperature","replace","fileList","dataPath","text","Array","require$$0","isObject","require$$1","isString","require$$2","isPrimitive","isStringArray","require$$3","primitives","isPositiveInteger","require$$4","isPositiveIntegerArray","require$$5","require$$6","validate_1","TypeError","name","year","range","party","dir","list","re_filename","fs","readDir","extname","dataDir","RE","files","f","test","statSync","isFile","push","sort","read","file_list","FILES","index_year","yr","match","index","capitalize","unsnakecase","str","parts","split","index_name","id","PARTY","index_party","db_1","objectKeys","union_1","cache","arr","j","load_json","copy","db","loadJSON","get_file","isNumber","removePunctuation","INDEX_YEAR","INDEX_NAME","require$$7","INDEX_PARTY","require$$8","require$$9","union","require$$10","getFile","require$$11","sotu_1","indices","ids","apply","setReadOnly","datasets","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","require$$44","require$$45","require$$46","require$$47","require$$48","require$$49","require$$50","require$$51","require$$52","require$$53","require$$54","require$$55","require$$56","require$$57","args"],"mappings":"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"}